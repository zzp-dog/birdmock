{
	"watchDebounceTime": 1000,
	"log4js": {
		"replaceConsole": true,
		"appenders": {
			"stdout": {
				"type": "stdout"
			},
			"dev": {
				"type": "dateFile",
				"backups": 3,
				"maxLogSize": 10485760,
				"alwaysIncludePattern": true,
				"pattern": "yyyy-MM-dd.log"
			}
		},
		"categories": {
			"default": {
				"appenders": [
					"stdout",
					"dev"
				],
				"level": "info"
			}
		},
		"activeCategory": "default"
	},
	"comment": [
		"1.proxy是webpack代理配置中的一种；",
		"2.可以直接将proxy引入webpack相关的配置中；",
		"3.proxy中target表示webpack要转发以指定api前缀开头的请求到目标服务器的服务器地址；",
		"4.localServerKey表示本地要代理的请求的api前缀，它对应着proxy中的api前缀，",
		"  且这个前缀开头的api要转发到本地服务，前提是要在本地开启服务，birdmock的工作就是这个，",
		"  它会根据localServerKey对应的proxy配置在本地创建一个本地mock服务，所以target必须是本地的服务，",
		"  如果不是本地的服务，webpack会将请求转发到这个服务，后续的请求将会被webpack代理到这个服务而不是本地服务;",
		"5.localServerProxy表示本地服务要代理的服务地址，这样就是经过两层正向代理了，第一层是webpack-dev-server代理到本地，",
		"  第二层是本地代理到localServerProxy指向的服务地址。当然你也可以在birdmock脚本命令中添加cross-env proxy=https://zzp-dog.github.io/，",
		"  但是内部优先读取cross-env设置的环境变量中的要代理的服务地址（proxy=https://zzp-dog.github.io/）。"
	],
	"localServerKey": "/api",
	"proxy": {
		"/api": {
			"target": "http://localhost:4200",
			"changeOrigin": true,
			"pathRewrite": {
				"^/api": ""
			}
		}
	}
}